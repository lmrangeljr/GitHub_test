/*******************************************************************************************************************
* PROJECT:      ADS TRAINING
* DEVELOPER:    LUIS MANUEL RANGEL JR
* TABLE:        A_VISITS
* DATE:         11/22/2023
*******************************************************************************************************************/

/*******************************************************************************************************************
* NECESSARY SQL PARAMETERS FOR STARTING A PROJECT
*******************************************************************************************************************/
-- thses are things that will be required below.
-- THIS WILL TELL THE COMPUTER WHO CAN READ/WRITE TO THE DIRECTORY.
use role research;

-- THIS IS THE COMPUTER POWER;
use warehouse query_wh_large;

-- THIS IS SO i DON'T NEED TO BE TYPING THIS MULTIPLE TIMES BUT I AM STILL GOING TO DO THAT.
use database delivered_211;

/*******************************************************************************************************************
* BASE JOINING TABLE
*******************************************************************************************************************/
CREATE OR REPLACE TEMPORARY TABLE FINAL_TABLE AS
SELECT MAIN.PATIENT_ID, MAIN.INDEX_DATE, 'BL_12MO' AS RUN_ID FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
UNION ALL
SELECT MAIN.PATIENT_ID, MAIN.INDEX_DATE, 'BL_6MO' AS RUN_ID FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
UNION ALL
SELECT MAIN.PATIENT_ID, MAIN.INDEX_DATE, 'FU_6MO' AS RUN_ID FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN;

/*******************************************************************************************************************
* THESE ARE THE VISITS FOR THE FOLLOWING:
* Encounter Type:
* Otolaryngologist		boc000445	Ambulatory Services Encounter
* Allergist				boc000445	Ambulatory Services Encounter
* Pulmonologist			boc000445	Ambulatory Services Encounter
********************************************************************************************************************
* Provider Specialty:
* Pulmonologist			boc002384
* Allergist				boc002358
* Otolaryngologist		boc002359
********************************************************************************************************************
* I AM STILL GETTING A COUNT OF ZERO FOR THE ERROR LABLE IN RUN ID.  i HAVE PUT 
*******************************************************************************************************************/
CREATE OR REPLACE TEMPORARY TABLE PT1 AS
WITH CUIS AS (SELECT DISTINCT A.PROVIDER_ID
					,b.SPECIALTY_CUI
			FROM DELIVERED_211.profile_store.provider_specialty AS A
			JOIN DELIVERED_211.profile_store.specialty AS B ON A.specialty_id = B.specialty_id
			WHERE b.SPECIALTY_CUI IN('boc002384','boc002358','boc002359')),
ENC_DATA AS (SELECT MAIN.PATIENT_ID
				,PROV.PROVIDER_ID
				,CUI.ENCOUNTER_TYPE_CUI
				,TO_DATE(MM.START_DATE) AS ENC_DATE
			FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER AS MM ON MAIN.PATIENT_ID=MM.PATIENT_ID
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER_LINK AS BASE ON MAIN.PATIENT_ID=BASE.PATIENT_ID AND MM.CLINICAL_ENCOUNTER_ID=BASE.CLINICAL_ENCOUNTER_ID
			JOIN DELIVERED_211.PROFILE_STORE.ENCOUNTER AS CUI ON MAIN.PATIENT_ID=CUI.PATIENT_ID AND BASE.ENCOUNTER_ID=CUI.ENCOUNTER_ID
			JOIN DELIVERED_211.PROFILE_STORE.ENCOUNTER_PROVIDER AS PROV ON BASE.ENCOUNTER_ID=PROV.ENCOUNTER_ID
			WHERE MAIN.BL_FULL_12MO <= TO_DATE(MM.START_DATE) AND TO_DATE(MM.START_DATE) <= MAIN.FU_6MO
				AND CUI.ENCOUNTER_TYPE_CUI IN('boc000445')),
TT AS (SELECT ED.PATIENT_ID
			,ED.ENC_DATE
			,CAT.SPECIALTY_CUI
	   FROM ENC_DATA AS ED
	   INNER JOIN CUIS AS CAT ON ED.PROVIDER_ID=CAT.PROVIDER_ID
	   WHERE ED.ENCOUNTER_TYPE_CUI IN ('boc000445'))
SELECT MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END AS RUN_ID
	,SUM(CASE WHEN BASE.SPECIALTY_CUI = 'boc002384' THEN 1 ELSE 0 END) AS PLMG_visit
	,SUM(CASE WHEN BASE.SPECIALTY_CUI = 'boc002358' THEN 1 ELSE 0 END) AS ALGY_visit
	,SUM(CASE WHEN BASE.SPECIALTY_CUI = 'boc002359' THEN 1 ELSE 0 END) AS ORL_visit
FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
LEFT JOIN TT AS BASE ON (MAIN.PATIENT_ID=BASE.PATIENT_ID AND BASE.ENC_DATE IS NOT NULL AND MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO)
GROUP BY MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE 
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END;

/*******************************************************************************************************************
* THESE ARE THE VISITS FOR THE FOLLOWING:
* Encounter Type:
* Outpatient 			boc000445	Ambulatory Services Encounter
* ED 					boc000447	Emergency Room Encounter
********************************************************************************************************************
* I AM STILL GETTING A COUNT OF ZERO FOR THE ERROR LABLE IN RUN ID.  i HAVE PUT 
*******************************************************************************************************************/
CREATE OR REPLACE TEMPORARY TABLE PT2 AS
WITH ENC_DATA AS (SELECT DISTINCT MAIN.PATIENT_ID
					,ENC.ENCOUNTER_TYPE_CUI
					,TO_DATE(MM.START_DATE) AS ENC_DATE
			FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER AS MM ON MAIN.PATIENT_ID=MM.PATIENT_ID
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER_LINK AS BASE ON MAIN.PATIENT_ID=BASE.PATIENT_ID AND MM.CLINICAL_ENCOUNTER_ID=BASE.CLINICAL_ENCOUNTER_ID
			INNER JOIN DELIVERED_211.profile_store.encounter AS ENC ON MAIN.PATIENT_ID=ENC.PATIENT_ID AND BASE.ENCOUNTER_ID=ENC.ENCOUNTER_ID
			WHERE MAIN.BL_FULL_12MO <= TO_DATE(ENC.ENCOUNTER_START) AND TO_DATE(ENC.ENCOUNTER_START) <= MAIN.FU_6MO
				AND ENC.ENCOUNTER_TYPE_CUI IN('boc000445', 'boc000447'))
SELECT MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END AS RUN_ID
	,SUM(CASE WHEN BASE.ENCOUNTER_TYPE_CUI = 'boc000445' THEN 1 ELSE 0 END) AS OP_visit
	,SUM(CASE WHEN BASE.ENCOUNTER_TYPE_CUI = 'boc000447' THEN 1 ELSE 0 END) AS ED_visit
FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
LEFT JOIN ENC_DATA AS BASE ON (MAIN.PATIENT_ID=BASE.PATIENT_ID AND BASE.ENC_DATE IS NOT NULL AND MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO)
GROUP BY MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE 
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END;

/*******************************************************************************************************************
* THESE ARE THE VISITS FOR THE FOLLOWING:
* Encounter Type:
* Otolaryngologist		boc000445	Ambulatory Services Encounter
* Allergist				boc000445	Ambulatory Services Encounter
* Pulmonologist			boc000445	Ambulatory Services Encounter
********************************************************************************************************************
* Provider Specialty:
* Pulmonologist			boc002384
* Allergist				boc002358
* Otolaryngologist		boc002359
********************************************************************************************************************
* CRS					boc004248	Chronic sinusitis (NCQA value set)
* NP					boc004265	Nasal Polyps (ECRI plus value set)
********************************************************************************************************************
* I AM STILL GETTING A COUNT OF ZERO FOR THE ERROR LABLE IN RUN ID.  i HAVE PUT 
*******************************************************************************************************************/
CREATE OR REPLACE TEMPORARY TABLE PT3 AS
WITH CUIS AS (SELECT DISTINCT A.PROVIDER_ID
					,b.SPECIALTY_CUI
			FROM DELIVERED_211.profile_store.provider_specialty AS A
			INNER JOIN DELIVERED_211.profile_store.specialty AS B ON A.specialty_id = B.specialty_id
			WHERE b.SPECIALTY_CUI IN('boc002384','boc002358','boc002359')),
DX_CUIS as (
		select distinct a.code_type as code_type_cui
			,A.mapped_diagnosis_code
			,A.boc_cui
			,A.boc_name
			,B.boc_name as code_type_name
		FROM MAPSET_20231004.public.boc_map_diagnosis_rollup a 
		INNER JOIN MAPSET_20231004.public.boc_map_diagnosis_code_type b on a.code_type = b.boc_cui
		WHERE a.boc_cui in('boc004248','boc004265')),
ALL_DX as (SELECT DISTINCT MAIN.PATIENT_ID
				,A.ENCOUNTER_ID
				,B.boc_cui
			FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
			INNER JOIN DELIVERED_211.profile_store.diagnosis AS A ON MAIN.PATIENT_ID=A.PATIENT_ID
			INNER JOIN DX_CUIS b ON (trim(lower(a.code)) = trim(lower(b.mapped_diagnosis_code)) AND trim(lower(a.code_type_name)) = trim(lower(b.code_type_name)))),
ENC_DATA AS (SELECT MAIN.PATIENT_ID
				,BASE.ENCOUNTER_ID
				,PROV.PROVIDER_ID
				,CUI.ENCOUNTER_TYPE_CUI
				,TO_DATE(MM.START_DATE) AS ENC_DATE
			FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER AS MM ON MAIN.PATIENT_ID=MM.PATIENT_ID
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER_LINK AS BASE ON MAIN.PATIENT_ID=BASE.PATIENT_ID AND MM.CLINICAL_ENCOUNTER_ID=BASE.CLINICAL_ENCOUNTER_ID
			JOIN DELIVERED_211.PROFILE_STORE.ENCOUNTER AS CUI ON MAIN.PATIENT_ID=CUI.PATIENT_ID AND BASE.ENCOUNTER_ID=CUI.ENCOUNTER_ID
			JOIN DELIVERED_211.PROFILE_STORE.ENCOUNTER_PROVIDER AS PROV ON BASE.ENCOUNTER_ID=PROV.ENCOUNTER_ID
			WHERE MAIN.BL_FULL_12MO <= TO_DATE(MM.START_DATE) AND TO_DATE(MM.START_DATE) <= MAIN.FU_6MO
				AND CUI.ENCOUNTER_TYPE_CUI IN('boc000445')),
TT AS (SELECT DISTINCT ED.PATIENT_ID
			,ED.ENC_DATE
			,CAT.SPECIALTY_CUI
			,DXD.BOC_CUI
	   FROM ENC_DATA AS ED
	   INNER JOIN CUIS AS CAT ON ED.PROVIDER_ID=CAT.PROVIDER_ID
	   INNER JOIN ALL_DX AS DXD ON ED.PATIENT_ID=DXD.PATIENT_ID AND ED.ENCOUNTER_ID=DXD.ENCOUNTER_ID)
SELECT DISTINCT MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END AS RUN_ID
	,SUM(CASE WHEN BASE.SPECIALTY_CUI = 'boc002384' THEN 1 ELSE 0 END) AS PLMG_visit
	,SUM(CASE WHEN BASE.SPECIALTY_CUI = 'boc002358' THEN 1 ELSE 0 END) AS ALGY_visit
	,SUM(CASE WHEN BASE.SPECIALTY_CUI = 'boc002359' THEN 1 ELSE 0 END) AS ORL_visit
FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
LEFT JOIN TT AS BASE ON (MAIN.PATIENT_ID=BASE.PATIENT_ID AND BASE.ENC_DATE IS NOT NULL AND MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO)
GROUP BY MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE 
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END;

/*******************************************************************************************************************
* THESE ARE THE VISITS FOR THE FOLLOWING:
* Encounter Type:
* Outpatient 			boc000445	Ambulatory Services Encounter
* ED 					boc000447	Emergency Room Encounter
********************************************************************************************************************
* CRS					boc004248	Chronic sinusitis (NCQA value set)
* NP					boc004265	Nasal Polyps (ECRI plus value set)
********************************************************************************************************************
* I AM STILL GETTING A COUNT OF ZERO FOR THE ERROR LABLE IN RUN ID.  i HAVE PUT 
*******************************************************************************************************************/

/*******************************************************************************************************************
* GROUPING ALL MY DATA TOGETHER
* WITH THE FULL OUTER JOIN THE NULL VALUES WILL REPRESENT THOSE WHO WERE NOT PRESENT IN TEH DATA PULL
*******************************************************************************************************************/
CREATE OR REPLACE TEMPORARY TABLE PT4 AS
WITH ENC_DATA AS (SELECT DISTINCT MAIN.PATIENT_ID
					,BASE.ENCOUNTER_ID
					,ENC.ENCOUNTER_TYPE_CUI
					,TO_DATE(MM.START_DATE) AS ENC_DATE
			FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER AS MM ON MAIN.PATIENT_ID=MM.PATIENT_ID
			JOIN DELIVERED_211.PROFILE_STORE.CLINICAL_ENCOUNTER_LINK AS BASE ON MAIN.PATIENT_ID=BASE.PATIENT_ID AND MM.CLINICAL_ENCOUNTER_ID=BASE.CLINICAL_ENCOUNTER_ID
			INNER JOIN DELIVERED_211.profile_store.encounter AS ENC ON MAIN.PATIENT_ID=ENC.PATIENT_ID AND BASE.ENCOUNTER_ID=ENC.ENCOUNTER_ID
			WHERE MAIN.BL_FULL_12MO <= TO_DATE(ENC.ENCOUNTER_START) AND TO_DATE(ENC.ENCOUNTER_START) <= MAIN.FU_6MO
				AND ENC.ENCOUNTER_TYPE_CUI IN('boc000445', 'boc000447')),
DX_CUIS as (
		select distinct a.code_type as code_type_cui
			,A.mapped_diagnosis_code
			,A.boc_cui
			,A.boc_name
			,B.boc_name as code_type_name
		from MAPSET_20231004.public.boc_map_diagnosis_rollup a 
		join MAPSET_20231004.public.boc_map_diagnosis_code_type b on a.code_type = b.boc_cui
		where a.boc_cui in('boc004248','boc004265')),
ALL_DX as (SELECT DISTINCT A.PATIENT_ID
				,A.ENCOUNTER_ID
				,B.boc_cui
			FROM DELIVERED_211.profile_store.diagnosis AS A
			INNER JOIN DX_CUIS AS B ON (trim(lower(a.code)) = trim(lower(b.mapped_diagnosis_code)) AND trim(lower(a.code_type_name)) = trim(lower(b.code_type_name)))),
TT AS (SELECT ED.PATIENT_ID
			,ED.ENCOUNTER_TYPE_CUI
			,ED.ENC_DATE
	   FROM ENC_DATA AS ED
	   INNER JOIN ALL_DX AS DXD ON ED.PATIENT_ID=DXD.PATIENT_ID AND ED.ENCOUNTER_ID=DXD.ENCOUNTER_ID)
SELECT MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END AS RUN_ID
	,SUM(CASE WHEN BASE.ENCOUNTER_TYPE_CUI = 'boc000445' THEN 1 ELSE 0 END) AS OP_visit
	,SUM(CASE WHEN BASE.ENCOUNTER_TYPE_CUI = 'boc000447' THEN 1 ELSE 0 END) AS ED_visit
FROM RESEARCH.GSK_CRSWNP.A_PATIENT_LMRJR AS MAIN
LEFT JOIN TT AS BASE ON (MAIN.PATIENT_ID=BASE.PATIENT_ID AND BASE.ENC_DATE IS NOT NULL AND MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO)
GROUP BY MAIN.PATIENT_ID
	,MAIN.INDEX_DATE
	,CASE 
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_12MO <= BASE.ENC_DATE AND BASE.ENC_DATE < MAIN.BL_FULL_6MO) THEN 'BL_12MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.BL_FULL_6MO <= BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.INDEX_DATE) THEN 'BL_6MO'
		WHEN BASE.ENC_DATE IS NOT NULL AND (MAIN.INDEX_DATE < BASE.ENC_DATE AND BASE.ENC_DATE <= MAIN.FU_6MO) THEN 'FU_6MO'
		ELSE 'NO DATA'
	END;

/*******************************************************************************************************************
* PUTTING IT ALL TOGETHER
*******************************************************************************************************************/
CREATE OR REPLACE TABLE RESEARCH.GSK_CRSWNP.A_VISITS_LMRJR AS
SELECT MAIN.PATIENT_ID
		,MAIN.INDEX_DATE
		,MAIN.RUN_ID
		,FTA.PLMG_visit
		,FTA.ALGY_visit
		,FTA.ORL_visit
		,FTB.OP_visit
		,FTB.ED_visit
		,FTC.PLMG_visit AS CRSwNP_PLMG_visit
		,FTC.ALGY_visit AS CRSwNP_ALGY_visit
		,FTC.ORL_visit AS CRSwNP_ORL_visit
		,FTD.OP_visit AS CRSwNP_OP_visit
		,FTD.ED_visit AS CRSwNP_ED_visit
FROM FINAL_TABLE AS MAIN
LEFT JOIN PT1 AS FTA ON MAIN.PATIENT_ID=FTA.PATIENT_ID AND MAIN.INDEX_DATE=FTA.INDEX_DATE AND MAIN.RUN_ID=FTA.RUN_ID
LEFT JOIN PT2 AS FTB ON MAIN.PATIENT_ID=FTB.PATIENT_ID AND MAIN.INDEX_DATE=FTB.INDEX_DATE AND MAIN.RUN_ID=FTB.RUN_ID
LEFT JOIN PT3 AS FTC ON MAIN.PATIENT_ID=FTC.PATIENT_ID AND MAIN.INDEX_DATE=FTC.INDEX_DATE AND MAIN.RUN_ID=FTC.RUN_ID
LEFT JOIN PT4 AS FTD ON MAIN.PATIENT_ID=FTD.PATIENT_ID AND MAIN.INDEX_DATE=FTD.INDEX_DATE AND MAIN.RUN_ID=FTD.RUN_ID;

/*******************************************************************************************************************
* PRINTING
*******************************************************************************************************************/
/******************************************************************************************************************/
-- TABLE 1
SELECT RUN_ID
		,COUNT(1) AS ROW_CNT
		,COUNT(DISTINCT PATIENT_ID) AS PAT_CNT
FROM PT1
GROUP BY RUN_ID;

SELECT MIN(MAIN.CNT) AS MIN_CNT,
	   AVG(MAIN.CNT) AS AVG_CNT,
	   MAX(MAIN.CNT) AS MAX_CNT
FROM (SELECT PATIENT_ID,
		  COUNT(PATIENT_ID) AS CNT
	 FROM PT1
	 GROUP BY PATIENT_ID) AS MAIN;

SELECT RUN_ID,
	 COUNT(DISTINCT PATIENT_ID) PAT_D_CNT,
	 SUM(PLMG_visit) AS PLMG_SUM,
	 SUM(ALGY_visit) AS ALGY_SUM,
	 SUM(ORL_visit) AS ORL_SUM
FROM PT1
GROUP BY RUN_ID;

SELECT *
FROM PT1
ORDER BY PATIENT_ID
LIMIT 100;

/******************************************************************************************************************/
-- TABLE 3
SELECT RUN_ID
		,COUNT(1) AS ROW_CNT
		,COUNT(DISTINCT PATIENT_ID) AS PAT_CNT
FROM PT3
GROUP BY RUN_ID;

SELECT MIN(MAIN.CNT) AS MIN_CNT,
	   AVG(MAIN.CNT) AS AVG_CNT,
	   MAX(MAIN.CNT) AS MAX_CNT
FROM (SELECT PATIENT_ID,
		  COUNT(PATIENT_ID) AS CNT
	 FROM PT3
	 GROUP BY PATIENT_ID) AS MAIN;

SELECT RUN_ID,
	 COUNT(DISTINCT PATIENT_ID) PAT_D_CNT,
	 SUM(PLMG_visit) AS PLMG_SUM,
	 SUM(ALGY_visit) AS ALGY_SUM,
	 SUM(ORL_visit) AS ORL_SUM
FROM PT3
GROUP BY RUN_ID;

SELECT *
FROM PT3
ORDER BY PATIENT_ID
LIMIT 100;

/******************************************************************************************************************/
-- TABLE 2
SELECT RUN_ID
		,COUNT(1) AS ROW_CNT
		,COUNT(DISTINCT PATIENT_ID) AS PAT_CNT
FROM PT2
GROUP BY RUN_ID;

SELECT MIN(MAIN.CNT) AS MIN_CNT,
	   AVG(MAIN.CNT) AS AVG_CNT,
	   MAX(MAIN.CNT) AS MAX_CNT
FROM (SELECT PATIENT_ID,
		  COUNT(PATIENT_ID) AS CNT
	 FROM PT2
	 GROUP BY PATIENT_ID) AS MAIN;

SELECT RUN_ID,
	 COUNT(DISTINCT PATIENT_ID) PAT_D_CNT,
	 SUM(OP_visit) AS PLMG_SUM,
	 SUM(ED_visit) AS ALGY_SUM
FROM PT2
GROUP BY RUN_ID;

SELECT *
FROM PT2
ORDER BY PATIENT_ID
LIMIT 100;

/******************************************************************************************************************/
-- TABLE 4
SELECT RUN_ID
		,COUNT(1) AS ROW_CNT
		,COUNT(DISTINCT PATIENT_ID) AS PAT_CNT
FROM PT4
GROUP BY RUN_ID;

SELECT MIN(MAIN.CNT) AS MIN_CNT,
	   AVG(MAIN.CNT) AS AVG_CNT,
	   MAX(MAIN.CNT) AS MAX_CNT
FROM (SELECT PATIENT_ID,
		  COUNT(PATIENT_ID) AS CNT
	 FROM PT4
	 GROUP BY PATIENT_ID) AS MAIN;

SELECT RUN_ID,
	 COUNT(DISTINCT PATIENT_ID) PAT_D_CNT,
	 SUM(OP_visit) AS PLMG_SUM,
	 SUM(ED_visit) AS ALGY_SUM
FROM PT4
GROUP BY RUN_ID;

SELECT *
FROM PT4
ORDER BY PATIENT_ID
LIMIT 100;



